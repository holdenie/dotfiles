
(defwidget bar []
  (centerbox :orientation "h"
    (topstuff)
    (music)
    (sidestuff)
  )
)
(defwidget meters []
  (box :class "meters" :orientation "h" :halign "end" :spacing 12 :space-evenly "false"
    (metric :label "󰍛"
            :value "󱃃 ${temp}C"
            :onchange ""
            :onclick "")
    (metric :label "󰍛"
            :value "󰍛  ${memoryusage}%"
            :onchange ""
            :onclick "")
    (metric :label "󰻠"
            :value "󰻠  ${cpusage}%"
            :onchange ""
            :onclick "")
    (metric :label ""
            :value {volume != "0" ? "󰕾  ${volume}%" : "󰝟 "}
            :onchange "pamixer --set-volume {} &"
            :onclick "bash ~/.config/scripts/volume mute &")
  )
)
(defwidget container [?nopadding]
  (box 
    :class "container"
    :style "padding: ${nopadding == true ? "0px" : "0px 0px 0px 0px"}"
    :orientation "horizontal"
    :halign "end"
    :space-evenly false
    (children))
)
(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (container
(systray :class "tray" :spacing 5)
)
    (meters)
    (time)
  )
)

(defwidget topstuff []
  (box :class "topstuff" :orientation "h" :space-evenly false
    (launcher)
    (workspaces)
  )
)

(defwidget launcher []
  (button 
    :class "launcher"
    :onclick "killall rofi || rofi -show drun -theme ~/.config/rofi/config.rasi &"
    ""
  )
)

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/yuh.sh")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace.sh")

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace.sh {} ${current_workspace}"
         :class "workspaces-widget"
    (box :space-evenly true
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (button :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )
(defwidget music []
  (button :class "music"
       :halign "center"
       :onclick "eww open calendarcenter --toggle --no-daemonize &"
      "${weekday},  ${month} ${day}"
  )
)

(defwidget metric [label value onchange onclick]
  (box :orientation "h" 
       :class "metric"
       :space-evenly false
    (button :onclick onclick `${value}`)
  )
)

(defpoll username :interval "100s"
  "whoami")
(defpoll hostname :interval "100s"
  "cat /etc/hostname")

(defwidget topcenter []

  (box :class "topcenter" :orientation "h" :halign "start" :spacing 10 :space-evenly "false"
    (image :class "pfp" :valign "start" :style `background-image: url("/home/holdenie/Pictures/pfp.jpg");` )
    (box :orientation "v" :space-evenly "false" :valign "center" :spacing 5
      (label :class "welcometext" :text username :halign "start" :valign "center")
      (label :text "${username}@${hostname}" :halign "center" :halign "start" :valign "start" :style "color: #8aadf4")
      (label :text "${uptime}" :halign "start" :valign "start" :halign "start" :style "color: #8aadf4")
    )
  )
)
(defwidget middlecenter []
  (box :class "middlecenter" :orientation "v" :valign "center" :halign "center" :spacing 5
    (scalecenter :label "󰕾"
        :value "${brightness}"
        :onchange "pactl -- set-sink-volume 0 {}%")
  )
)
(defwidget bottomcenter []
  (box :class "bottomcenter" :valign "end" :orientation "v" :halign "center" :spacing 10  
    (box :spacing 10
      (button :class { networkstatus != "" ? "testenabled" : "test"} :onclick {networkstatus != "" ? "rfkill block wifi &" : "rfkill unblock wifi"} "󰤨  ")
      (button :class { bluetoothstatus != "no" ? "testenabled" : "test"}  :onclick {bluetoothstatus != "no" ? "bluetoothctl power off" : "bluetoothctl power on"}  "")
      
    )
    (box :spacing 10
      (button :class "test" :onclick "eww open actioncenter --toggle && ~/.config/scripts/screensht area &" "󰹑  ")
      (button :class "test" :onclick "nemo ~/.local/share/Trash/files/ & eww open actioncenter --toggle &" "")
      (button :class "test" :onclick "nemo & eww open actioncenter --toggle &" "")
    )
  )
)

(defwidget scalecenter [label value onchange]
  (box :orientation "h"
       :class "scalecenter"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)
  )
)
(defwindow actioncenter
  :monitor 0
  :exclusive "false"
  :windowtype "normal"
  :stacking "fg"
  :geometry (geometry :x "0"
                      :y "0"
                      :width "300px"
                      :height "300px"
                      :anchor "top right")
  :reserve (struts :side "right" :distance "4%")
  (centerbox :orientation "v"
    (topcenter)
    (middlecenter)
    (bottomcenter)
  )
)

(include "./music_center.yuck")
(include "./calendar.yuck")
(include "./variables.yuck")

(defwidget time []
  (box :class "time"
       :orientation "h"
       :space-evenly false
       :valign "center"
    (button :onclick "eww open actioncenter --toggle --no-daemonize &"
    "${hours}:${minutes} ${pmoram}")
  )
)

(defpoll
    hours
      :interval "1s"
        "date +%l")
(defpoll
    minutes
      :interval "1s"
        "date +%M")
(defpoll
    pmoram
      :interval "1s"
        "date +%p")
(defpoll
    weekday
      :interval "1s"
        "date +%A")
(defpoll
    month
      :interval "1s"
        "date +%b")
(defpoll
    day
      :interval "1s"
        "date +%e")
(defwindow bar
  :monitor 0
  :exclusive "true"
  :focusable "false"
  :windowtype "normal"
  :stacking "fg"
  :geometry (geometry :x "0"
                      :y "0"
                      :width "100%"
                      :height "40px"
                      :anchor "top center")
  :reserve (struts :side "left" :distance "4%")
  (bar)
)
